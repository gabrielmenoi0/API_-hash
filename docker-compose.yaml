version: '3'

services:

  api:
    image: 'openjdk:11'
    #    command: java -cp /app/resources:/app/classes:/app/libs/* com.h2database.server.web.WebServlet -pgWeb
    volumes:
      - './data:/data'
      - './src/main/resources:/app/resources'
      - './target/classes:/app/classes'
      - './target/libs:/app/libs'
    ports:
      - '8081:8081'
    environment:
      - 'DB_DRIVER=org.h2.Driver'
      - 'DB_URL=jdbc:h2:mem:urldb'
      - 'DB_USERNAME=sa'
      - 'DB_PASSWORD='
    depends_on:
      - prometheus
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
  prometheus:
    image: prom/prometheus:v2.30.0
    ports:
      - 9090:9090
    volumes:
      - ./:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "81:80"
    volumes:
      - ./nginx.conf:/otp/homebrew/nginx/etc/nginx/nginx.conf
    depends_on:
      - app
  app:
    build: .
    container_name: app
    ports:
      - "8080:8080"
    environment:
      - REDIS_HOST=redis
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - database
      - rabbitmq
  database:
    image: postgres
    container_name: database
    environment:
      - POSTGRES_DB=h2db
      - POSTGRES_USER=h2user
      - POSTGRES_PASSWORD=h2password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

volumes:
  postgres-data:
  prometheus_data: { }
